---
- hosts: all
  tasks:
  
    - name: "PING all hosts to ensure we are alive and ready"
      ping:


- hosts: workstation
  tasks:
  
    - name: "TEMPLATE modify /etc/motd"
      template:
        src: motd.j2
        dest: /etc/motd
        owner: root
        group: root
        mode: 0644  

    - name: "TEMPLATE create /var/tmp/webui-hello-namespace.txt"
      template:
        src: webui-hello-namespace.j2
        dest: /var/tmp/webui-hello-namespace.txt
        owner: root
        group: root
        mode: 0644
        
    - name: "TEMPLATE create /var/tmp/nfs-pv-01.txt"
      template:
        src: nfs-pv-01.j2
        dest: /var/tmp/nfs-pv-01.txt
        owner: root
        group: root
        mode: 0644

    - name: "TEMPLATE create /var/tmp/nfs-pv-02.txt"
      template:
        src: nfs-pv-02.j2
        dest: /var/tmp/nfs-pv-02.txt
        owner: root
        group: root
        mode: 0644
  
    - name: "TEMPLATE create /var/tmp/nfs-pv-03.txt"
      template:
        src: nfs-pv-03.j2
        dest: /var/tmp/nfs-pv-03.txt
        owner: root
        group: root
        mode: 0644

    - name: "TEMPLATE create /var/tmp/bc-dockerfile.txt"
      template:
        src: bc-dockerfile.j2
        dest: /var/tmp/bc-dockerfile.txt
        owner: root
        group: root
        mode: 0644
  
    - name: "FILE create path for exports/helloworld"
      file: 
        path=/exports/helloworld
        state=directory

    - name: "TEMPLATE create /exports/helloworld/index.html"
      template:
        src: helloworld-html.j2
        dest: /exports/helloworld/index.html
        owner: root
        group: root
        mode: 0644

    - name: "SERVICE enable and start nfs"
      service: 
        name=nfs 
        state=started 
        enabled=yes

    - name: "SERVICE enable and start nfslock"
      service: 
        name=nfslock
        state=started 
        enabled=yes
      
    - name: "TEMPLATE modify/install /etc/exports"
      template:
        src: nfsexports.j2
        dest: /etc/exports
        owner: root
        group: root
        mode: 644
        
    - name: "CMD export nfs filesystems"
      shell: 
        cmd: |
          exportfs -a

- hosts: masters
  tasks:
  
    - name: "TEMPLATE create /var/tmp/helloworld.html"
      template:
        src: helloworld-html.j2
        dest: /var/tmp/helloworld.html
        owner: root
        group: root
        mode: 0644

    - name: "TEMPLATE create /var/tmp/helloworld3-pv-claim.yml"
      template:
        src: helloworld3-pv-claim.j2
        dest: /var/tmp/helloworld3-pv-claim.yml
        owner: root
        group: root
        mode: 0644

    - name: "TEMPLATE create /var/tmp/nfs-pv-01.yml"
      template:
        src: nfs-pv-01.j2
        dest: /var/tmp/nfs-pv-01.yml
        owner: root
        group: root
        mode: 0644

    - name: "TEMPLATE create /var/tmp/nfs-pv-02.yml"
      template:
        src: nfs-pv-02.j2
        dest: /var/tmp/nfs-pv-02.yml
        owner: root
        group: root
        mode: 0644
  
    - name: "TEMPLATE create /var/tmp/nfs-pv-03.yml"
      template:
        src: nfs-pv-03.j2
        dest: /var/tmp/nfs-pv-03.yml
        owner: root
        group: root
        mode: 0644

    - name: "CMD deleting existing OCP router"
      shell: 
        cmd: |
          oc login -u system:admin
          oc project default
          oc delete all -l router=router
          oc logout
          

    - name: "CMD creating new OCP router with replicas=2"
      shell: 
        cmd: |
          oc login -u system:admin
          oc project default
          oc adm router --replicas=2 --service-account=router
          oc logout


    - name: "CMD creating OCP admin user with cluster admin role"
      shell: 
        cmd: |
          oc login -u system:admin
          htpasswd -b /etc/origin/master/htpasswd admin redhat
          oc adm policy add-cluster-role-to-user cluster-admin admin
          oc logout


- hosts: masters,nodes
  tasks:
  
    - name: "CMD cleaning yum content"
      shell: 
        cmd: |
          yum clean all
  
